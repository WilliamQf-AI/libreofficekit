name: Linux Nightly Release
on:
  workflow_dispatch:
  schedule:
    -  cron: '0 0 * * *'
    
# Cancel previous build if it is still running
concurrency:
  group: '${{ github.workflow }}'
  cancel-in-progress: true

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: |
          git clone --no-checkout --depth=1 --filter=blob:none https://github.com/${{ github.repository }} lok
          cd lok
          test -z $(git rev-list  --after="24 hours" @) && echo "::set-output name=should_run::false" 
  fetch:
    needs: [check_date]
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    name: Fetch external projects
    steps:
      - name: Turn off line ending conversion in git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Sparse Checkout
        run: |
          git clone --no-checkout --depth=1 --filter=blob:none --sparse https://github.com/${{ github.repository }} lok
          cd lok
          git config --local gc.auto 0
          tee .git/info/sparse-checkout <<EOF
          /*
          !/*/
          /libreoffice-core/
          !/libreoffice-core/translations
          !/libreoffice-core/helpcontent2
          /libreoffice-core/dictionaries
          !/libreoffice-core/dictionaries/*/
          /libreoffice-core/dictionaries/en
          /libreoffice-core/translations/source
          !/libreoffice-core/translations/source/*/
          /libreoffice-core/translations/source/en-GB/
          /libreoffice-core/translations/source/en-ZA/
          EOF
          git -c protocol.version=2 checkout
      - name: Cache external tarballs
        id: cache-external-tar
        uses: actions/cache@v3
        with:
          path: external-tar
          key: external-tar-linux-${{ hashFiles('lok/libreoffice-core/download.lst') }}-${{ hashFiles('lok/libreoffice-core/external/**/*') }}
          restore-keys: |
            external-tar-linux--${{ hashFiles('lok/libreoffice-core/external/**/*') }}
            external-tar--
            external-tar-
      - name: Install build dependencies
        if: steps.cache-external-tar.outputs.cache-hit != 'true'
        run: sudo apt-get install git build-essential zip libkrb5-dev nasm graphviz python3 python3-dev autoconf libfontconfig1-dev gperf libxslt1-dev xsltproc libxml2-utils libxrandr-dev libx11-dev bison flex libgtk-3-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libnss3-dev libavahi-client-dev libxt-dev
      - name: Configure LOKit and Fetch Tarballs
        if: steps.cache-external-tar.outputs.cache-hit != 'true'
        env:
          PARALLELISM: 4
        run: |
          ./autogen.sh --with-distro=CPWin64-LOKit --with-external-tar="C:\external-tar"
          make fetch
  build:
    needs: [check_date, fetch]
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Remove .NET/Haskell/Android to free up space (~30 GiB)
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android
      - name: Turn off line ending conversion in git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        run: |
          git -c protocol.version=2 clone --depth=1 https://github.com/${{ github.repository }} /lok
          cd /lok
          git config --local gc.auto 0
      - name: Install build dependencies
        run: sudo apt-get install git build-essential zip libkrb5-dev nasm graphviz python3 python3-dev autoconf libfontconfig1-dev gperf libxslt1-dev xsltproc libxml2-utils libxrandr-dev libx11-dev bison flex libgtk-3-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libnss3-dev libavahi-client-dev libxt-dev
      - name: Cache external tarballs
        id: cache-external-tar
        uses: actions/cache@v3
        with:
          path: external-tar
          key: external-tar-linux-${{ hashFiles('lok/libreoffice-core/download.lst') }}-${{ hashFiles('lok/libreoffice-core/external/**/*') }}
          restore-keys: |
            external-tar-linux--${{ hashFiles('lok/libreoffice-core/external/**/*') }}
            external-tar--
            external-tar-
      - name: Build
        env:
          PARALLELISM: 4
        run: |
          ./autogen.sh --with-distro=CPWin64-LOKit --with-external-tar="C:\external-tar"
          cd /lok/libreoffice-core
          make build-nocheck
      - name: Make artifact
        run: |
          cd /lok/libreoffice-core
          /usr/bin/tar --zstd -cf instdir.tar.zst instdir
          cp instdir.tar.zst $GITHUB_WORKSPACE/instdir-linux.tar.zst
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "instdir-linux.tar.zst"
          allowUpdates: true
          artifactErrorsFailBuild: true
          name: "Linux Nightly Release"
          tag: linux-nightly-run-${{ github.run_number }}
          body: |
            This is a nightly release built from the `main` branch.
            Compatible with Windows 10 and later.
